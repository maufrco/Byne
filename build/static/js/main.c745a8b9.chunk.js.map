{"version":3,"sources":["byne-verde.svg","service/WSService.tsx","reducer/Reducer.tsx","context/Context.tsx","components/Follows.tsx","style/Style.tsx","components/StockItem.tsx","components/StockList.tsx","components/ChartStock.tsx","style/ChartTheme.tsx","components/Status.tsx","components/WSControl.tsx","App.tsx","index.tsx"],"names":["module","exports","WSService","ws","useRef","WebSocket","process","onopoen","current","onopen","console","log","error","onerror","instance","React","Component","INITIAL_STATE","initialConfig","undefined","isConnected","stockSymbols","monitor","Map","isSubscribed","symbol","Boolean","find","element","WSReducer","state","action","service","getInstance","type","payload","newState","set","msg","event","stocks","send","JSON","stringify","filter","item","delete","GlobalContext","createContext","dispatch","WSProvider","Consumer","children","useReducer","value","Provider","Follows","props","useContext","Switch","onChange","target","checked","color","name","inputProps","useStyles","makeStyles","theme","createStyles","price","textAlign","fontSize","fontWeight","containerItem","borderColor","borderBottom","paddingTop","paddingBottom","phrase","root","width","backgroundColor","palette","background","paper","headerList","addButtom","extendedIcon","marginRight","spacing","formControl","margin","minWidth","chips","display","flexWrap","chip","noLabel","marginTop","StockItem","companyName","catchPhrase","useMemo","get","classes","useDebugValue","Box","alignItems","alignContent","className","flexGrow","pl","Hidden","only","Chip","icon","label","Number","toLocaleString","style","currency","Divider","StockList","useState","follows","setFollows","open","setOpen","handleOpen","boxShadow","p","m","FormControl","InputLabel","id","Select","labelId","onClose","onOpen","MenuItem","stocksData","map","stock","index","key","Fab","size","aria-label","variant","onClick","mb","mt","component","Highcharts","setOptions","colors","title","textTransform","subtitle","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","series","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","ChartStock","stockHistoy","setStockHistory","setSymbol","chartRef","useEffect","length","chart","addPoint","options","data","text","enabled","linearGradient","x1","x2","y1","y2","stops","animation","padding","bgcolor","src","ByneLogo","alt","pr","justifyContent","disabled","stocksActived","FormHelperText","highcharts","allowChartUpdate","ref","Status","WSControl","onmessage","e","message","parse","Object","keys","values","darkTheme","createMuiTheme","primary","teal","secondary","orange","typography","fontFamily","App","ThemeProvider","Typography","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c745a8b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/byne-verde.3982f384.svg\";","\nimport React, { useRef } from 'react'\n// Singleton\nexport class WSService extends React.Component<any> {\n    private static instance: WSService;\n    public ws = useRef<WebSocket>(new WebSocket(`${process.env.REACT_APP_PROTOCOL}${process.env.REACT_APP_URL}:${process.env.REACT_APP_PORT}`, 'json'))\n\n    public onopoen = this.ws.current.onopen = () => {\n      try {\n        console.log('CONNECTING')\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    public onerror = this.ws.current.onerror = () => {\n      try {\n        console.error('Connection Error with WebSocket')\n        // getModelWebsocketStatus('ERROR')\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    public static getInstance (): WSService {\n      if (!WSService.instance) {\n        WSService.instance = new WSService({})\n      }\n      return WSService.instance\n    }\n}\n","\n// eslint-disable-next-line no-unused-vars\nimport { IConfig, WSSymbol, IStocksContext } from '../context/Context'\nimport { WSService } from '../service/WSService'\n\nexport type Action = {type: 'SET_INITIAL' | 'SET_STOCK_SYMBOLS'|'SET_CONNECT'| 'SET_MONITOR'| 'SUBSCRIBE'| 'UNSUBSCRIBE' | 'IS_SUBSCRIBED'; payload: any}\n\nexport const INITIAL_STATE: IStocksContext = {\n  initialConfig: undefined,\n  isConnected: false,\n  stockSymbols: [],\n  monitor: new Map()\n}\nconst isSubscribed = (symbol:WSSymbol, stockSymbols:WSSymbol[]) :boolean => Boolean(stockSymbols.find(element => symbol === element))\n\nconst WSReducer = (state: IStocksContext, action: Action) => {\n  const service = WSService.getInstance()\n  console.log(action.type, action.payload)\n  switch (action.type) {\n    case 'SET_INITIAL': {\n      const newState = { ...state }\n      newState.initialConfig = action.payload\n      return newState\n    }\n    case 'SET_STOCK_SYMBOLS': {\n      const newState = { ...state }\n      newState.stockSymbols = [...newState.stockSymbols, ...[action.payload]]\n      return newState\n    }\n    case 'SET_CONNECT': {\n      const newState = { ...state }\n      newState.isConnected = action.payload\n      return newState\n    }\n    case 'SET_MONITOR': {\n      const newState = { ...state }\n      if (!isSubscribed(action.payload[0], newState.stockSymbols)) { return newState }\n      newState.monitor = new Map(newState.monitor.set(action.payload[0], action.payload[1]))\n      return newState\n    }\n    case 'IS_SUBSCRIBED': {\n      const newState = { ...state }\n      // faça algo\n      return newState\n    }\n    case 'SUBSCRIBE': {\n      const newState = { ...state }\n      if (isSubscribed(action.payload, newState.stockSymbols)) { return newState }\n      const msg = {\n        event: 'subscribe',\n        stocks: [...newState.stockSymbols, ...[action.payload]]\n      }\n      newState.stockSymbols = [...newState.stockSymbols, ...[action.payload]]\n      service.ws.current.send(JSON.stringify(msg))\n      return newState\n    }\n    case 'UNSUBSCRIBE': {\n      const newState = { ...state }\n      if (!isSubscribed(action.payload, newState.stockSymbols)) { return newState }\n      // faça algo\n      const msg = {\n        event: 'unsubscribe',\n        stocks: [action.payload]\n      }\n      newState.stockSymbols = newState.stockSymbols.filter(item => item !== action.payload)\n      newState.monitor.delete(action.payload)\n      service.ws.current.send(JSON.stringify(msg))\n\n      return newState\n    }\n    default: return state\n  }\n}\nexport default WSReducer\n","import React, { createContext, useReducer } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport WSReducer, { Action, INITIAL_STATE } from '../reducer/Reducer'\n\nexport interface IStocksContext {\n  initialConfig: IConfig|undefined;\n  isConnected: boolean;\n  stockSymbols: WSSymbol[];\n  monitor: Map<string, number>;\n}\n\nexport type WSSymbol = 'IET'|'N'|'ZHT'|'V'|'ELY'|'TZW'|'FIK'|'T'|'ZQ'|'NP'|'MJ'|'KG'|'OY'|'ITN'|'OB'|'ACM'|'QQ'|'X'|'XLC'|'S';\ntype WSErrorEvent = 'invalid stock symbol'| 'invalid message' | 'message too long'\ntype WSEvent = 'subscribe'|'unsubscribe'|'disconnecting'|'connected'|'error'|'stocks-update'|'disconected'\n\nexport type IStock = {\n  symbol?: WSSymbol;\n  companyName?: string;\n  catchPhrase?: string;\n  basePrice?: number;\n}\n\nexport interface IConfig {\n  event: WSEvent;\n  message: string;\n  stocksData:[IStock];\n  supportedSymbols?: [WSSymbol]\n}\n\nexport const initialIStock:IStock = {\n  companyName: '',\n  catchPhrase: '',\n  basePrice: 0\n}\n\nexport const GlobalContext = createContext<{state: typeof INITIAL_STATE,\n  dispatch:(action:Action) => void}>\n    ({\n      state: INITIAL_STATE,\n      dispatch: () => {}\n    })\nexport const GlobalConsumer = GlobalContext.Consumer\n\n// eslint-disable-next-line react/prop-types\nexport const WSProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(WSReducer, INITIAL_STATE)\n  const value = { state, dispatch }\n\n  return (\n    <GlobalContext.Provider value={value}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}\n","/* eslint-disable react/prop-types */\nimport React, { useContext } from 'react'\n// eslint-disable-next-line no-unused-vars\n\nimport { GlobalContext, WSSymbol } from '../context/Context'\nimport Switch from '@material-ui/core/Switch'\n\nconst Follows: React.FC = props => {\n  const { dispatch } = useContext(GlobalContext)\n\n  const symbol = props.children as WSSymbol\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log('handleChange')\n    event.target.checked\n      ? dispatch({ type: 'SUBSCRIBE', payload: symbol })\n      : dispatch({ type: 'UNSUBSCRIBE', payload: symbol })\n  }\n  return (\n    <>\n      <Switch\n        onChange={handleChange}\n        color=\"primary\"\n        name={symbol}\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n    </>\n  )\n}\nexport default Follows\n","// eslint-disable-next-line no-unused-vars\nimport { makeStyles, createStyles, Theme } from '@material-ui/core'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    price: {\n      textAlign: 'center',\n      fontSize: 28,\n      fontWeight: 500,\n      color: '#f27a41'\n\n    },\n    containerItem: {\n      borderColor: '#333',\n      borderBottom: 1,\n      paddingTop: 3,\n      paddingBottom: 3\n    },\n    symbol: {\n      color: '#f27a41'\n    },\n    phrase: {\n\n      fontWeight: 300,\n      fontSize: 13,\n      color: '#666'\n    },\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    headerList: {\n      textAlign: 'right',\n      color: '#4cc3c4',\n      borderColor: '#4cc3c4'\n    },\n    addButtom: {\n      textAlign: 'right'\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1)\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: '66%',\n      textAlign: 'right'\n\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: 2\n    },\n    noLabel: {\n      marginTop: theme.spacing(3)\n    }\n  })\n)\n","import React, { useContext, useMemo, useDebugValue } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport Follows from './Follows'\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport { Divider, Box, Hidden, Chip } from '@material-ui/core'\n// eslint-disable-next-line no-unused-vars\nimport { GlobalContext, IStock } from '../context/Context'\nimport { useStyles } from '../style/Style'\n\nconst StockItem: React.FC = props => {\n  // eslint-disable-next-line react/prop-types\n  const { symbol, companyName, catchPhrase } = props.children as IStock\n  const { state: { monitor } } = useContext(GlobalContext)\n  const price = useMemo(() => monitor.get(symbol!), [monitor, symbol])\n  const classes = useStyles()\n  useDebugValue(symbol)\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"space-between\" alignContent=\"center\" className={classes.containerItem} >\n        <Box flexGrow={0}>\n          <Box flexGrow={0} >{companyName}</Box>\n          <Box flexGrow={0} className={classes.symbol}> {symbol} </Box>\n        </Box>\n        <Box flexGrow={1} pl={3}className={classes.phrase}>\n          <Hidden only={['sm', 'xs']}>{catchPhrase}</Hidden>\n        </Box>\n        <Box>\n          {price &&\n          (\n            <Chip color=\"primary\" icon={<MonetizationOnIcon />}\n              label={Number(price).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })} />\n          )\n          }\n          <Follows>{symbol}</Follows>\n        </Box>\n      </Box>\n      <Divider />\n    </>\n  )\n}\nexport default StockItem\n","import React, { useContext } from 'react'\nimport StockItem from './StockItem'\nimport { Box, Fab, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\n// eslint-disable-next-line no-unused-vars\nimport { GlobalContext, IStock } from '../context/Context'\nimport { useStyles } from '../style/Style'\n\nconst StockList: React.FC = () => {\n  const classes = useStyles()\n  const { state: { initialConfig } } = useContext(GlobalContext)\n  const [follows, setFollows] = React.useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setFollows([event.target.value] as string[])\n  }\n  const handleClose = () => { setOpen(false) }\n  const handleOpen = () => { setOpen(true) }\n\n  return (\n    <div style={{ width: '100%' }}>\n\n      <Box boxShadow={3} p={4} m={2}>\n\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"controlled-open-select-label\">Adicionar\n          </InputLabel>\n          <Select\n            labelId=\"controlled-open-select-label\"\n            id=\"controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={follows}\n            onChange={handleChange}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {initialConfig?.stocksData.map(\n        (stock:IStock, index:number) => {\n          return (stock ? (\n            <MenuItem key={index} value={stock.symbol}>{stock.companyName}</MenuItem>\n          ) : null)\n        })}\n          </Select>\n        </FormControl>\n        <Fab size=\"small\" color=\"secondary\" aria-label=\"add\" variant=\"round\" onClick={handleOpen}>\n          <AddIcon />\n\n        </Fab>\n\n        <Box borderBottom={2} mb={3} mt={1} component=\"div\" display=\"block\" className={classes.headerList}>\n          Empresas\n        </Box>\n        {initialConfig?.stocksData.map(\n        (stock:IStock, index:number) => {\n          return (stock ? (\n            <div key={index}>\n              <StockItem>{stock as IStock}</StockItem>\n            </div>\n          ) : null)\n        })}\n\n      </Box>\n    </div>\n  )\n}\n\nexport default StockList\n","import React, { useEffect, useState, useRef, useContext, useMemo } from 'react'\nimport { theme } from '../style/ChartTheme'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport Box from '@material-ui/core/Box'\nimport ByneLogo from './../byne-verde.svg'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'\nimport Select from '@material-ui/core/Select'\n// eslint-disable-next-line no-unused-vars\n\nimport { GlobalContext, WSSymbol } from '../context/Context'\n\nHighcharts.setOptions(theme)\n\nconst ChartStock: React.FC = (children) => {\n  const { state: { monitor, stockSymbols } } = useContext(GlobalContext)\n\n  const [stockHistoy, setStockHistory] = useState<number[]>([])\n  const [symbol, setSymbol] = useState<WSSymbol>()\n\n  const price = useMemo(() => monitor.get(symbol!), [monitor, symbol])\n\n  const chartRef: any = useRef()\n  const allowChartUpdate = true\n\n  const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    setSymbol(event.target.value as WSSymbol)\n    setStockHistory([])\n  }\n\n  useEffect(() => {\n    (stockHistoy.length <= 150)\n      ? (setStockHistory([...stockHistoy, [...[price]]] as number[]))\n      : (chartRef.current.chart.series[0].addPoint(price as number, true, true))\n  }, [price])\n\n  // useEffect(() => {\n\n  //    if (!(isSubscribed(symbol as WSSymbol))) {\n  //      setStockHistory([])\n  //    }\n  // },\n  // [stockSymbols])\n\n  const options: Highcharts.Options = {\n    series: [\n      {\n        type: 'line',\n        data: stockHistoy,\n        name: price ? `${symbol} - ${Number(price).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}` : ''\n      }\n    ],\n    xAxis: {\n\n      title: {\n        text: null\n      }\n    },\n    yAxis: {\n      title: {\n        text: null\n      },\n      labels: {\n        enabled: false\n      }\n    },\n    credits: { enabled: false },\n    title: {\n      text: ''\n    },\n    chart: {\n      backgroundColor: {\n        linearGradient: { x1: 1, x2: 1, y1: 0, y2: 1 },\n        stops: [\n          [0, 'rgb(33, 49, 75)'],\n          [1, 'rgb(42, 46, 54)']\n        ]\n      },\n      animation: false\n    }\n  }\n  return (\n    <>\n      <div style={{ width: '100%', margin: 0, padding: 0 }}>\n        <Box display=\"flex\" m={0} p={0} bgcolor=\"rgb(33, 49, 75)\">\n          <Box p={3} flexGrow={1} >\n            <img src={ByneLogo} style={{ color: '#FFF' }} alt=\"BYNE – Comunicação crítica, mais simples e eficiente\" />\n          </Box>\n          <Box pr={4} display=\"row-reverse\" justifyContent=\"flex-end\">\n\n            <FormControl disabled = {stockSymbols.length <= 0} >\n              <InputLabel id=\"demo-simple-select-helper-label\">Empresas</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-helper-label\"\n                id=\"demo-simple-select-helper\"\n                value={symbol}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {stockSymbols.map((stocksActived, index) => (<MenuItem key={index} value={stocksActived}>{stocksActived}</MenuItem>))}\n              </Select>\n              <FormHelperText>Selecione uma empresa para exibir no gráfico</FormHelperText>\n            </FormControl>\n\n          </Box>\n        </Box>\n      </div>\n      <HighchartsReact highcharts={Highcharts} allowChartUpdate={allowChartUpdate} options={options} ref= {chartRef} />\n    </>\n  )\n}\n\nexport default ChartStock\n","export const theme = {\n  colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n  title: {\n    style: {\n      color: '#E0E0E3',\n      textTransform: 'uppercase',\n      fontSize: '20px'\n    }\n  },\n  subtitle: {\n    style: {\n      color: '#E0E0E3',\n      textTransform: 'uppercase'\n    }\n  },\n  xAxis: {\n    gridLineColor: '#707073',\n    labels: {\n      style: {\n        color: '#E0E0E3'\n      }\n    },\n    lineColor: '#707073',\n    minorGridLineColor: '#505053',\n    tickColor: '#707073',\n    title: {\n      style: {\n        color: '#A0A0A3'\n      }\n    }\n  },\n  yAxis: {\n    gridLineColor: '#707073',\n    labels: {\n      style: {\n        color: '#E0E0E3'\n      }\n    },\n    lineColor: '#707073',\n    minorGridLineColor: '#505053',\n    tickColor: '#707073',\n    tickWidth: 1,\n    title: {\n      style: {\n        color: '#A0A0A3'\n      }\n    }\n  },\n  tooltip: {\n    backgroundColor: 'rgba(0, 0, 0, 0.85)',\n    style: {\n      color: '#F0F0F0'\n    }\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: '#F0F0F3',\n        style: {\n          fontSize: '13px'\n        }\n      },\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    boxplot: {\n      fillColor: '#505053'\n    },\n    candlestick: {\n      lineColor: 'white'\n    },\n    errorbar: {\n      color: 'white'\n    }\n  },\n  legend: {\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\n    itemStyle: {\n      color: '#E0E0E3'\n    },\n    itemHoverStyle: {\n      color: '#FFF'\n    },\n    itemHiddenStyle: {\n      color: '#606063'\n    },\n    title: {\n      style: {\n        color: '#C0C0C0'\n      }\n    }\n  },\n  credits: {\n    style: {\n      color: '#666'\n    }\n  },\n  labels: {\n    style: {\n      color: '#707073'\n    }\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: '#F0F0F3'\n    },\n    activeDataLabelStyle: {\n      color: '#F0F0F3'\n    }\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: '#DDDDDD',\n      theme: {\n        fill: '#505053'\n      }\n    }\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: '#505053',\n      stroke: '#000000',\n      style: {\n        color: '#CCC'\n      },\n      states: {\n        hover: {\n          fill: '#707073',\n          stroke: '#000000',\n          style: {\n            color: 'white'\n          }\n        },\n        select: {\n          fill: '#000003',\n          stroke: '#000000',\n          style: {\n            color: 'white'\n          }\n        }\n      }\n    },\n    inputBoxBorderColor: '#505053',\n    inputStyle: {\n      backgroundColor: '#333',\n      color: 'silver'\n    },\n    labelStyle: {\n      color: 'silver'\n    }\n  },\n  navigator: {\n    handles: {\n      backgroundColor: '#666',\n      borderColor: '#AAA'\n    },\n    outlineColor: '#CCC',\n    maskFill: 'rgba(255,255,255,0.1)',\n    series: {\n      color: '#7798BF',\n      lineColor: '#A6C7ED'\n    },\n    xAxis: {\n      gridLineColor: '#505053'\n    }\n  }\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/Context'\n\nconst Status: React.FC = () => {\n  const { state: { isConnected } } = useContext(GlobalContext)\n\n  return (\n    <small>\n [status: {isConnected ? (<span>conectado</span>) : (<span>desconectado</span>) }]\n    </small>)\n}\nexport default Status\n","import React, { useEffect, useContext } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport { GlobalContext, WSSymbol } from '../context/Context'\nimport { WSService } from '../service/WSService'\n\n// eslint-disable-next-line react/prop-types\nconst WSControl : React.FC = () => {\n  const { dispatch } = useContext(GlobalContext)\n  // LifeCycles\n  const service = WSService.getInstance()\n  service.ws.current.onmessage = (e) => {\n    try {\n      const message = JSON.parse(e.data)\n      if (message.event === 'stocks-update') {\n        const symbol = (Object.keys(message.stocks)[0]) as WSSymbol\n        const value = (Object.values(message.stocks)[0])\n        dispatch({ type: 'SET_MONITOR', payload: [symbol, value] })\n      } else if (message.event === 'connected') {\n        dispatch({ type: 'SET_CONNECT', payload: true }) // setIsConnected(true)\n        dispatch({ type: 'SET_INITIAL', payload: message }) // setInitialConfig(message)\n      } else {\n        console.log(message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  // useEffect(() => {\n\n  //   return () => {\n  //     try {\n  //       if (!service.ws.current) return\n  //       dispatch({ type: 'SET_CONNECT', payload: false })\n  //       service.ws.current.close()\n  //     } catch (error) {\n  //       console.error(error)\n  //     }\n  //   }\n  // },\n  // [])\n\n  return null\n}\nexport default WSControl\n","import React, { useContext } from 'react'\nimport { WSProvider, GlobalContext } from './context/Context'\nimport StockList from './components/StockList'\nimport ChartStock from './components/ChartStock'\nimport Status from './components/Status'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme, Box, Typography, Container } from '@material-ui/core'\nimport { teal, orange } from '@material-ui/core/colors'\nimport WSControl from './components/WSControl'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: teal,\n    secondary: orange,\n    background: {\n      paper: '#2a2f39'\n    }\n  },\n  typography: {\n    fontFamily: ' Helvetica Now, Arial'\n  }\n})\nconst App: React.FC = () => {\n  const { state: { initialConfig, isConnected } } = useContext(GlobalContext)\n\n  return (\n    <WSProvider>\n      <WSControl></WSControl>\n      <ThemeProvider theme={darkTheme}>\n        <Typography component=\"div\">\n          <Box >\n            <ChartStock>{initialConfig?.stocksData[0]}</ChartStock>\n          </Box>\n          <Container maxWidth=\"lg\">\n            <StockList></StockList>\n          </Container>\n          <Status></Status>\n        </Typography>\n      </ThemeProvider>\n    </WSProvider>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}